networks:
  my_network:
    driver: bridge

services:

  # nodeapp1:
  #   build: .
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - mongo-srv
  #     - redis
  #     - minio
  #   volumes:
  #     - nodeapp1-data:/app/data
  #   env_file:
  #     - ./.env
  #   networks:
  #     - my_network
  #
  mongo-srv:
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: artistdb1
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    env_file:
      - ./.env
    networks:
      - my_network

  redis:
    image: "redis:latest"
    command: ["redis-server", "--maxmemory", "1g"]
    ports:
      - "6379:6379"
    networks:
      - my_network

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin12345
    ports:
      - "9000:9000" # MinIO API Port
      - "9001:9001" # MinIO Console Port
    volumes:
      - minio-data:/data
    networks:
      - my_network

  elasticsearch:
    # image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    image: elasticsearch:8.7.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - my_network

  # logstash:
  #   # image: docker.elastic.co/logstash/logstash:8.12.0
  #   image: logstash:8.7.1
  #   container_name: logstash
  #   environment:
  #     - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
  #   volumes:
  #     - type: bind
  #       source: ./logstash/pipeline
  #       target: /usr/share/logstash/pipeline
  #     - type: bind
  #       source: ./logstash/config
  #       target: /usr/share/logstash/config
  #   ports:
  #     - "5044:5044"
  #     - "5000:5000/tcp"
  #     - "5000:5000/udp"
  #     - "9600:9600"
  #   networks:
  #     - my_network
  #   depends_on:
  #     - elasticsearch

  kibana:
    # image: docker.elastic.co/kibana/kibana:8.12.0
    image: kibana:8.7.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - my_network
    depends_on:
      - elasticsearch

  logstash:
    image: logstash:8.7.1
    container_name: logstash
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    volumes:
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
      - type: bind
        source: ./logstash/config
        target: /usr/share/logstash/config
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    networks:
      - my_network
    depends_on:
      - elasticsearch

volumes:
  nodeapp1-data:
  mongo-data:
  minio-data:
  elasticsearch-data:
    driver: local
